name: Continuous Delivery

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - '.github/**'
      - 'package.json'
      - 'yarn.lock'
      - 'Dockerfile'

jobs:
  Linting:
    name: Linting
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Use Node.js 12
        uses: actions/setup-node@v2
        with:
          node-version: 12
      - name: Restore CI Cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-12-${{ hashFiles('**/yarn.lock') }}
      - name: Install Deps
        run: yarn
      - name: Run ESLint
        run: yarn lint --fix=false

  Build:
    name: Compiling NextJS
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Use Node.js 12
        uses: actions/setup-node@v2
        with:
          node-version: 12
      - name: Restore CI Cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-12-${{ hashFiles('**/yarn.lock') }}
      - name: Install NodeJS Dependencies
        run: yarn
      - name: Restore NextJS Build Cache
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/src/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.json') }}
      - name: Build NextJS
        run: yarn build
      - name: Upload Bundle
        uses: actions/upload-artifact@v2
        with:
          name: next_bundle
          path: src/.next

  Github-Package-Registry-Docker:
    name: Publish image to Github Package Registry
    runs-on: ubuntu-latest
    if: "!(contains(github.event.head_commit.message, '[skip ci]') ||contains(github.event.head_commit.message, '[skip docker]'))"
    needs: [Linting, Build]
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Download build bundle artifact
        uses: actions/download-artifact@v2
        with:
          name: next_bundle
          path: src/.next
      - name: Publish to Github Package Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: favware/website/website
          username: Favware-bot
          password: ${{ secrets.BOT_TOKEN }}
          tags: 'latest,stable'
          registry: docker.pkg.github.com
